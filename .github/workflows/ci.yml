name: CI Pipeline
 
on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
 
env:
  NODE_VERSION: 22.x
 
jobs:
  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
 
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
 
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
 
      - name: Install dependencies
        run: npm ci
 
      - name: Run unit tests
        run: npm run test:unit -- --verbose
 
      - name: Upload unit test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: unit-test-results
          path: coverage/
 
      - name: Generate test coverage
        run: npm run test:coverage
 
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella
 
  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: unit-tests
 
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
 
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
 
      - name: Install dependencies
        run: npm ci
 
      - name: Run integration tests
        run: npm run test:integration -- --verbose
 
      - name: Generate coverage report
        run: npm run test:coverage
 
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage/lcov.info
          flags: integration
          name: codecov-umbrella
 
  build-and-deploy:
    name: Build & Deploy
    runs-on: ubuntu-latest
    needs: [unit-tests, integration-tests]
    if: github.ref == 'refs/heads/main'
 
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
 
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
 
      - name: Install dependencies
        run: npm ci
 
      - name: Build application
        run: npm run build || echo "No build step defined"
 
      - name: Deploy to staging
        run: echo "Deploying to staging environment..."
 
      - name: Run smoke tests
        run: |
          npm start &
          sleep 5
          curl -f http://localhost:3000 || exit 1
          pkill -f "node app.js"
